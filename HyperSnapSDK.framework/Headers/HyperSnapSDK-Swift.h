#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.1.3 (swiftlang-1100.0.282.1 clang-1100.0.33.15)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="HyperSnapSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSCoder;
@class UIColor;

SWIFT_CLASS("_TtC12HyperSnapSDK14HVCameraButton")
@interface HVCameraButton : UIButton
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setImageTintColor:(UIColor * _Nonnull)color;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

enum DocumentType : NSInteger;
@class UIImage;
@class UINavigationController;

SWIFT_CLASS("_TtC12HyperSnapSDK11HVDocConfig")
@interface HVDocConfig : NSObject
- (void)setDocumentType:(enum DocumentType)type;
- (void)setAspectRatio:(double)aspectRatio;
- (void)setShouldShowReviewPage:(BOOL)shouldShow;
- (void)setShouldShowInstructionsPage:(BOOL)shouldShow;
- (void)setShouldShowFlashButton:(BOOL)shouldShow;
- (void)setShouldAddPadding:(BOOL)shouldAdd;
- (void)setShouldShowFullScreenViewController:(BOOL)shouldShow;
- (void)setCaptureButtonEnabledImage:(UIImage * _Nonnull)image;
- (void)setNavigationController:(UINavigationController * _Nonnull)navVC;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIFont;

SWIFT_CLASS("_TtC12HyperSnapSDK23HVDocDescriptionA4Label")
@interface HVDocDescriptionA4Label : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextAlignment:(NSTextAlignment)alignment;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK21HVDocDescriptionLabel")
@interface HVDocDescriptionLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextAlignment:(NSTextAlignment)alignment;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK22HVDocInstructionsLabel")
@interface HVDocInstructionsLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextAlignment:(NSTextAlignment)alignment;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK25HVDocReviewContinueButton")
@interface HVDocReviewContinueButton : UIButton
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setBorderColor:(CGColorRef _Nonnull)color;
+ (void)setBackgroundColor:(CGColorRef _Nonnull)color;
+ (void)setBorderWidth:(CGFloat)width;
+ (void)setTitleColor:(UIColor * _Nullable)color for:(UIControlState)state;
+ (void)setTitleShadowColor:(UIColor * _Nullable)color for:(UIControlState)state;
+ (void)setTitleShadowOffset:(CGSize)offset;
+ (void)setTitleFont:(UIFont * _Nonnull)font;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK23HVDocReviewRetakeButton")
@interface HVDocReviewRetakeButton : UIButton
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setBorderColor:(CGColorRef _Nonnull)color;
+ (void)setBackgroundColor:(CGColorRef _Nonnull)color;
+ (void)setBorderWidth:(CGFloat)width;
+ (void)setTitleColor:(UIColor * _Nullable)color for:(UIControlState)state;
+ (void)setTitleShadowColor:(UIColor * _Nullable)color for:(UIControlState)state;
+ (void)setTitleShadowOffset:(CGSize)offset;
+ (void)setTitleFont:(UIFont * _Nonnull)font;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK17HVDocSubTextLabel")
@interface HVDocSubTextLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextAlignment:(NSTextAlignment)alignment;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class HVError;
@class NSBundle;

/// DocCameraViewController is the base class which will be used from outside.
SWIFT_CLASS("_TtC12HyperSnapSDK20HVDocsViewController")
@interface HVDocsViewController : UIViewController
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
@property (nonatomic, copy) void (^ _Nonnull completionHandler)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, UIViewController * _Nonnull);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Starting point for Document Capture.
/// note:
/// Initialisation of the SDK must be done before calling this method
/// \param callingVC ViewController that is currently active. The new ViewController will be presented on top of this.
///
/// \param hvDocConfig Object with all properties related to Document Capture
///
/// \param completionHandler Closure that will be called after successful capture + processing or when there is an error
///
+ (void)start:(UIViewController * _Nonnull)callingVC hvDocConfig:(HVDocConfig * _Nonnull)hvDocConfig completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, UIViewController * _Nonnull))completionHandler;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface HVDocsViewController (SWIFT_EXTENSION(HyperSnapSDK))
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillLayoutSubviews;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK7HVError")
@interface HVError : NSObject
- (NSString * _Nonnull)getErrorMessage SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getErrorCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12HyperSnapSDK23HVFaceActivityIndicator")
@interface HVFaceActivityIndicator : UIActivityIndicatorView
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setStyle:(UIActivityIndicatorViewStyle)style;
+ (void)setColor:(UIColor * _Nonnull)color;
- (nonnull instancetype)initWithActivityIndicatorStyle:(UIActivityIndicatorViewStyle)style SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK19HVFaceActivityLabel")
@interface HVFaceActivityLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextAlignment:(NSTextAlignment)alignment;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

enum LivenessMode : NSInteger;

SWIFT_CLASS("_TtC12HyperSnapSDK12HVFaceConfig")
@interface HVFaceConfig : NSObject
- (void)setLivenessMode:(enum LivenessMode)livenessMode;
- (void)setClientIDWithClientId:(NSString * _Nonnull)clientId;
- (void)setShouldShowInstructionsPage:(BOOL)shouldShow;
- (void)setShouldReturnFullImageUri:(BOOL)shouldReturn;
- (void)setLivenessAPIParameters:(NSDictionary<NSString *, id> * _Nonnull)parameters;
- (void)setLivenessAPIHeaders:(NSDictionary<NSString *, NSString *> * _Nonnull)headers;
- (void)setShouldEnablePadding:(BOOL)shouldEnable;
- (void)setPaddingWithLeft:(float)left right:(float)right top:(float)top bottom:(float)bottom;
- (void)setLivenessEndpoint:(NSString * _Nonnull)endpoint;
- (void)setShouldUseBackCamera:(BOOL)shouldUse;
- (void)setShouldShowCameraSwitchButton:(BOOL)shouldShow;
- (void)setFaceCaptureCircleSuccessColor:(UIColor * _Nonnull)color;
- (void)setFaceCaptureCircleFailureColor:(UIColor * _Nonnull)color;
- (void)setShouldShowFullScreenViewController:(BOOL)shouldShow;
- (void)setCustomLoadingScreen:(UIViewController * _Nonnull)vc;
- (void)setCaptureButtonEnabledImage:(UIImage * _Nonnull)image;
- (void)setCaptureButtonDisabledImage:(UIImage * _Nonnull)image;
- (void)setNavigationController:(UINavigationController * _Nonnull)navVC;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK22HVFaceDescriptionLabel")
@interface HVFaceDescriptionLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextAlignment:(NSTextAlignment)alignment;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK28HVFaceInstructionBottomLabel")
@interface HVFaceInstructionBottomLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK25HVFaceInstructionTopLabel")
@interface HVFaceInstructionTopLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK32HVFaceInstructionsViewController")
@interface HVFaceInstructionsViewController : UIViewController
@property (nonatomic, copy) void (^ _Nonnull completionHandler)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable, UIViewController * _Nonnull);
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK20HVFaceViewController")
@interface HVFaceViewController : UIViewController
@property (nonatomic, copy) void (^ _Nonnull completionHandler)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable, UIViewController * _Nonnull);
- (void)viewDidLoad;
/// Starting point for Face Capture and liveness.
/// note:
/// Initialisation of the SDK must be done before calling this method
/// \param callingVC ViewController that is currently active. The new ViewController will be presented on top of this.
///
/// \param hvFaceConfig Object with all properties related to Face Capture
///
/// \param completionHandler Closure that will be called after successful capture + processing or when there is an error
///
+ (void)start:(UIViewController * _Nonnull)callingVC hvFaceConfig:(HVFaceConfig * _Nonnull)hvFaceConfig completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable, UIViewController * _Nonnull))completionHandler;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK27HVInstructionsProceedButton")
@interface HVInstructionsProceedButton : UIButton
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setBorderColor:(CGColorRef _Nonnull)color;
+ (void)setBackgroundColor:(CGColorRef _Nonnull)color;
+ (void)setBorderWidth:(CGFloat)width;
+ (void)setTitleColor:(UIColor * _Nullable)color for:(UIControlState)state;
+ (void)setTitleShadowColor:(UIColor * _Nullable)color for:(UIControlState)state;
+ (void)setTitleShadowOffset:(CGSize)offset;
+ (void)setTitleFont:(UIFont * _Nonnull)font;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

enum FaceMatchMode : NSInteger;

SWIFT_CLASS("_TtC12HyperSnapSDK15HVNetworkHelper")
@interface HVNetworkHelper : NSObject
/// Helper method to make OCR API calls to HyperVerge’s Backend.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     endpoint: The full endpoint for the API Call
///   </li>
///   <li>
///     documentUri: The local path of the image on which the OCR extraction will be made. This is the ‘imageUri’ returned in the result of the Document Capture flow
///   </li>
///   <li>
///     parameters: Optional. API parameters.
///   </li>
///   <li>
///     headers: Optional. API headers.
///   </li>
///   <li>
///     completionHandler: A completion handler with three parameters.
///   </li>
///   <li>
///     error: An object of type HVError?. It is null if the call is successful. Otherwise, it has an error code and error message.
///   </li>
///   <li>
///     result: An objet of type [String:AnyObject]?. It is null if there was an error. Otherwise, it has the API response
///   </li>
///   <li>
///     headers: An object of type [String:String]?. It is null unless there were any special headers sent by the HyperVerge’s backend.
///   </li>
/// </ul>
+ (void)makeOCRCallWithEndpoint:(NSString * _Nonnull)endpoint documentUri:(NSString * _Nonnull)documentUri parameters:(NSDictionary<NSString *, id> * _Nullable)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable))completionHandler;
/// Helper method to make Face Match calls to HyperVerge’s Backend.
/// The face match call compares face in an ID card and the face in a user photo and gives a match score.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     endpoint: The full endpoint for the API Call
///   </li>
///   <li>
///     faceUri: The local path of the user photo. This is the ‘imageUri’ returned in the result of the Face Capture flow.
///   </li>
///   <li>
///     documentUri: The local path of the document image. This is the ‘imageUri’ returned in the result of the Document Capture flow.
///   </li>
///   <li>
///     parameters: Optional. API parameters.
///   </li>
///   <li>
///     headers: Optional. API headers.
///   </li>
///   <li>
///     completionHandler: A completion handler with three parameters.
///   </li>
///   <li>
///     error: An object of type HVError?. It is null if the call is successful. Otherwise, it has an error code and error message.
///   </li>
///   <li>
///     result: An objet of type [String:AnyObject]?. It is null if there was an error. Otherwise, it has the API response
///   </li>
///   <li>
///     headers: An object of type [String:String]?. It is null unless there were any special headers sent by the HyperVerge’s backend.
///   </li>
/// </ul>
+ (void)makeFaceMatchCallWithEndpoint:(NSString * _Nonnull)endpoint faceUri:(NSString * _Nonnull)faceUri documentUri:(NSString * _Nonnull)documentUri parameters:(NSDictionary<NSString *, id> * _Nullable)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable))completionHandler;
+ (void)makeFaceMatchCallWithEndpoint:(NSString * _Nonnull)endpoint image1:(NSString * _Nonnull)image1 image2:(NSString * _Nonnull)image2 faceMatchMode:(enum FaceMatchMode)faceMatchMode parameters:(NSDictionary<NSString *, id> * _Nullable)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable))completionHandler;
+ (void)makeMatchingAPICallWithEndpoint:(NSString * _Nonnull)endpoint parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK12HVTitleLabel")
@interface HVTitleLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK15HyperSnapParams")
@interface HyperSnapParams : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Determines the aspect ratio of a document for document capture
typedef SWIFT_ENUM(NSInteger, DocumentType, open) {
/// AspectRatio : 0.625
  DocumentTypeCard = 0,
/// AspectRatio : 1.4
  DocumentTypeA4 = 1,
/// AspectRatio : 0.68
  DocumentTypePassport = 2,
  DocumentTypeOther = 3,
};

typedef SWIFT_ENUM(NSInteger, Region, open) {
  RegionAsiaPacific = 0,
  RegionUnitedStates = 1,
  RegionIndia = 2,
};

typedef SWIFT_ENUM(NSInteger, Product, open) {
  ProductFaceID = 0,
  ProductIAM = 1,
};

typedef SWIFT_ENUM(NSInteger, LivenessMode, open) {
  LivenessModeNone = 0,
  LivenessModeTextureLiveness = 1,
};

typedef SWIFT_ENUM(NSInteger, FaceMatchMode, open) {
  FaceMatchModeFace_Id = 0,
  FaceMatchModeFace_Face = 1,
  FaceMatchModeFace_IdFaceString = 2,
};


SWIFT_CLASS("_TtC12HyperSnapSDK18HyperSnapSDKConfig")
@interface HyperSnapSDKConfig : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull StoryBoardName;)
+ (NSString * _Nonnull)StoryBoardName SWIFT_WARN_UNUSED_RESULT;
+ (void)initializeWithAppId:(NSString * _Nonnull)appId appKey:(NSString * _Nonnull)appKey region:(enum Region)region product:(enum Product)product;
/// Initialization method for the SDK. Should be called before any of the SDK’s ViewControllers.
/// \param appId Provided by HyperVerge
///
/// \param appKey Provided by HyperVerge
///
/// \param region It is of type ‘HyperSnapParams.Region’. This enum has 3 values - AsiaPacific, India and UnitedStates
///
+ (void)initializeWithAppId:(NSString * _Nonnull)appId appKey:(NSString * _Nonnull)appKey region:(enum Region)region;
+ (void)setShouldUseSignature:(BOOL)shouldUseSignature;
+ (void)setShouldEnableSSLPinning:(BOOL)shouldEnableSSLPinning;
+ (void)setShouldUseAnalytics:(BOOL)shouldUse;
+ (void)setBrandingCheck:(BOOL)shouldCheck completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable))completionHandler;
+ (void)setShouldReturnRawResponse:(BOOL)shouldReturn;
+ (void)deleteImageAtUri:(NSString * _Nonnull)imageUri;
+ (NSString * _Nonnull)sortDictionaryAlphabetically:(NSDictionary<NSString *, id> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



















#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.1.3 (swiftlang-1100.0.282.1 clang-1100.0.33.15)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="HyperSnapSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSCoder;
@class UIColor;

SWIFT_CLASS("_TtC12HyperSnapSDK14HVCameraButton")
@interface HVCameraButton : UIButton
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setImageTintColor:(UIColor * _Nonnull)color;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

enum DocumentType : NSInteger;
@class UIImage;
@class UINavigationController;

SWIFT_CLASS("_TtC12HyperSnapSDK11HVDocConfig")
@interface HVDocConfig : NSObject
- (void)setDocumentType:(enum DocumentType)type;
- (void)setAspectRatio:(double)aspectRatio;
- (void)setShouldShowReviewPage:(BOOL)shouldShow;
- (void)setShouldShowInstructionsPage:(BOOL)shouldShow;
- (void)setShouldShowFlashButton:(BOOL)shouldShow;
- (void)setShouldAddPadding:(BOOL)shouldAdd;
- (void)setShouldShowFullScreenViewController:(BOOL)shouldShow;
- (void)setCaptureButtonEnabledImage:(UIImage * _Nonnull)image;
- (void)setNavigationController:(UINavigationController * _Nonnull)navVC;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIFont;

SWIFT_CLASS("_TtC12HyperSnapSDK23HVDocDescriptionA4Label")
@interface HVDocDescriptionA4Label : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextAlignment:(NSTextAlignment)alignment;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK21HVDocDescriptionLabel")
@interface HVDocDescriptionLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextAlignment:(NSTextAlignment)alignment;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK22HVDocInstructionsLabel")
@interface HVDocInstructionsLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextAlignment:(NSTextAlignment)alignment;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK25HVDocReviewContinueButton")
@interface HVDocReviewContinueButton : UIButton
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setBorderColor:(CGColorRef _Nonnull)color;
+ (void)setBackgroundColor:(CGColorRef _Nonnull)color;
+ (void)setBorderWidth:(CGFloat)width;
+ (void)setTitleColor:(UIColor * _Nullable)color for:(UIControlState)state;
+ (void)setTitleShadowColor:(UIColor * _Nullable)color for:(UIControlState)state;
+ (void)setTitleShadowOffset:(CGSize)offset;
+ (void)setTitleFont:(UIFont * _Nonnull)font;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK23HVDocReviewRetakeButton")
@interface HVDocReviewRetakeButton : UIButton
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setBorderColor:(CGColorRef _Nonnull)color;
+ (void)setBackgroundColor:(CGColorRef _Nonnull)color;
+ (void)setBorderWidth:(CGFloat)width;
+ (void)setTitleColor:(UIColor * _Nullable)color for:(UIControlState)state;
+ (void)setTitleShadowColor:(UIColor * _Nullable)color for:(UIControlState)state;
+ (void)setTitleShadowOffset:(CGSize)offset;
+ (void)setTitleFont:(UIFont * _Nonnull)font;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK17HVDocSubTextLabel")
@interface HVDocSubTextLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextAlignment:(NSTextAlignment)alignment;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class HVError;
@class NSBundle;

/// DocCameraViewController is the base class which will be used from outside.
SWIFT_CLASS("_TtC12HyperSnapSDK20HVDocsViewController")
@interface HVDocsViewController : UIViewController
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
@property (nonatomic, copy) void (^ _Nonnull completionHandler)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, UIViewController * _Nonnull);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Starting point for Document Capture.
/// note:
/// Initialisation of the SDK must be done before calling this method
/// \param callingVC ViewController that is currently active. The new ViewController will be presented on top of this.
///
/// \param hvDocConfig Object with all properties related to Document Capture
///
/// \param completionHandler Closure that will be called after successful capture + processing or when there is an error
///
+ (void)start:(UIViewController * _Nonnull)callingVC hvDocConfig:(HVDocConfig * _Nonnull)hvDocConfig completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, UIViewController * _Nonnull))completionHandler;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface HVDocsViewController (SWIFT_EXTENSION(HyperSnapSDK))
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillLayoutSubviews;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK7HVError")
@interface HVError : NSObject
- (NSString * _Nonnull)getErrorMessage SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getErrorCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12HyperSnapSDK23HVFaceActivityIndicator")
@interface HVFaceActivityIndicator : UIActivityIndicatorView
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setStyle:(UIActivityIndicatorViewStyle)style;
+ (void)setColor:(UIColor * _Nonnull)color;
- (nonnull instancetype)initWithActivityIndicatorStyle:(UIActivityIndicatorViewStyle)style SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK19HVFaceActivityLabel")
@interface HVFaceActivityLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextAlignment:(NSTextAlignment)alignment;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

enum LivenessMode : NSInteger;

SWIFT_CLASS("_TtC12HyperSnapSDK12HVFaceConfig")
@interface HVFaceConfig : NSObject
- (void)setLivenessMode:(enum LivenessMode)livenessMode;
- (void)setClientIDWithClientId:(NSString * _Nonnull)clientId;
- (void)setShouldShowInstructionsPage:(BOOL)shouldShow;
- (void)setShouldReturnFullImageUri:(BOOL)shouldReturn;
- (void)setLivenessAPIParameters:(NSDictionary<NSString *, id> * _Nonnull)parameters;
- (void)setLivenessAPIHeaders:(NSDictionary<NSString *, NSString *> * _Nonnull)headers;
- (void)setShouldEnablePadding:(BOOL)shouldEnable;
- (void)setPaddingWithLeft:(float)left right:(float)right top:(float)top bottom:(float)bottom;
- (void)setLivenessEndpoint:(NSString * _Nonnull)endpoint;
- (void)setShouldUseBackCamera:(BOOL)shouldUse;
- (void)setShouldShowCameraSwitchButton:(BOOL)shouldShow;
- (void)setFaceCaptureCircleSuccessColor:(UIColor * _Nonnull)color;
- (void)setFaceCaptureCircleFailureColor:(UIColor * _Nonnull)color;
- (void)setShouldShowFullScreenViewController:(BOOL)shouldShow;
- (void)setCustomLoadingScreen:(UIViewController * _Nonnull)vc;
- (void)setCaptureButtonEnabledImage:(UIImage * _Nonnull)image;
- (void)setCaptureButtonDisabledImage:(UIImage * _Nonnull)image;
- (void)setNavigationController:(UINavigationController * _Nonnull)navVC;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK22HVFaceDescriptionLabel")
@interface HVFaceDescriptionLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextAlignment:(NSTextAlignment)alignment;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK28HVFaceInstructionBottomLabel")
@interface HVFaceInstructionBottomLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK25HVFaceInstructionTopLabel")
@interface HVFaceInstructionTopLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK32HVFaceInstructionsViewController")
@interface HVFaceInstructionsViewController : UIViewController
@property (nonatomic, copy) void (^ _Nonnull completionHandler)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable, UIViewController * _Nonnull);
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK20HVFaceViewController")
@interface HVFaceViewController : UIViewController
@property (nonatomic, copy) void (^ _Nonnull completionHandler)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable, UIViewController * _Nonnull);
- (void)viewDidLoad;
/// Starting point for Face Capture and liveness.
/// note:
/// Initialisation of the SDK must be done before calling this method
/// \param callingVC ViewController that is currently active. The new ViewController will be presented on top of this.
///
/// \param hvFaceConfig Object with all properties related to Face Capture
///
/// \param completionHandler Closure that will be called after successful capture + processing or when there is an error
///
+ (void)start:(UIViewController * _Nonnull)callingVC hvFaceConfig:(HVFaceConfig * _Nonnull)hvFaceConfig completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable, UIViewController * _Nonnull))completionHandler;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK27HVInstructionsProceedButton")
@interface HVInstructionsProceedButton : UIButton
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setBorderColor:(CGColorRef _Nonnull)color;
+ (void)setBackgroundColor:(CGColorRef _Nonnull)color;
+ (void)setBorderWidth:(CGFloat)width;
+ (void)setTitleColor:(UIColor * _Nullable)color for:(UIControlState)state;
+ (void)setTitleShadowColor:(UIColor * _Nullable)color for:(UIControlState)state;
+ (void)setTitleShadowOffset:(CGSize)offset;
+ (void)setTitleFont:(UIFont * _Nonnull)font;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

enum FaceMatchMode : NSInteger;

SWIFT_CLASS("_TtC12HyperSnapSDK15HVNetworkHelper")
@interface HVNetworkHelper : NSObject
/// Helper method to make OCR API calls to HyperVerge’s Backend.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     endpoint: The full endpoint for the API Call
///   </li>
///   <li>
///     documentUri: The local path of the image on which the OCR extraction will be made. This is the ‘imageUri’ returned in the result of the Document Capture flow
///   </li>
///   <li>
///     parameters: Optional. API parameters.
///   </li>
///   <li>
///     headers: Optional. API headers.
///   </li>
///   <li>
///     completionHandler: A completion handler with three parameters.
///   </li>
///   <li>
///     error: An object of type HVError?. It is null if the call is successful. Otherwise, it has an error code and error message.
///   </li>
///   <li>
///     result: An objet of type [String:AnyObject]?. It is null if there was an error. Otherwise, it has the API response
///   </li>
///   <li>
///     headers: An object of type [String:String]?. It is null unless there were any special headers sent by the HyperVerge’s backend.
///   </li>
/// </ul>
+ (void)makeOCRCallWithEndpoint:(NSString * _Nonnull)endpoint documentUri:(NSString * _Nonnull)documentUri parameters:(NSDictionary<NSString *, id> * _Nullable)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable))completionHandler;
/// Helper method to make Face Match calls to HyperVerge’s Backend.
/// The face match call compares face in an ID card and the face in a user photo and gives a match score.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     endpoint: The full endpoint for the API Call
///   </li>
///   <li>
///     faceUri: The local path of the user photo. This is the ‘imageUri’ returned in the result of the Face Capture flow.
///   </li>
///   <li>
///     documentUri: The local path of the document image. This is the ‘imageUri’ returned in the result of the Document Capture flow.
///   </li>
///   <li>
///     parameters: Optional. API parameters.
///   </li>
///   <li>
///     headers: Optional. API headers.
///   </li>
///   <li>
///     completionHandler: A completion handler with three parameters.
///   </li>
///   <li>
///     error: An object of type HVError?. It is null if the call is successful. Otherwise, it has an error code and error message.
///   </li>
///   <li>
///     result: An objet of type [String:AnyObject]?. It is null if there was an error. Otherwise, it has the API response
///   </li>
///   <li>
///     headers: An object of type [String:String]?. It is null unless there were any special headers sent by the HyperVerge’s backend.
///   </li>
/// </ul>
+ (void)makeFaceMatchCallWithEndpoint:(NSString * _Nonnull)endpoint faceUri:(NSString * _Nonnull)faceUri documentUri:(NSString * _Nonnull)documentUri parameters:(NSDictionary<NSString *, id> * _Nullable)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable))completionHandler;
+ (void)makeFaceMatchCallWithEndpoint:(NSString * _Nonnull)endpoint image1:(NSString * _Nonnull)image1 image2:(NSString * _Nonnull)image2 faceMatchMode:(enum FaceMatchMode)faceMatchMode parameters:(NSDictionary<NSString *, id> * _Nullable)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable))completionHandler;
+ (void)makeMatchingAPICallWithEndpoint:(NSString * _Nonnull)endpoint parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable, NSDictionary<NSString *, NSString *> * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK12HVTitleLabel")
@interface HVTitleLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
+ (void)setFont:(UIFont * _Nonnull)font;
+ (void)setTextColor:(UIColor * _Nonnull)color;
+ (void)setShadowColor:(UIColor * _Nonnull)color;
+ (void)setShadowOffset:(CGSize)offset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12HyperSnapSDK15HyperSnapParams")
@interface HyperSnapParams : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Determines the aspect ratio of a document for document capture
typedef SWIFT_ENUM(NSInteger, DocumentType, open) {
/// AspectRatio : 0.625
  DocumentTypeCard = 0,
/// AspectRatio : 1.4
  DocumentTypeA4 = 1,
/// AspectRatio : 0.68
  DocumentTypePassport = 2,
  DocumentTypeOther = 3,
};

typedef SWIFT_ENUM(NSInteger, Region, open) {
  RegionAsiaPacific = 0,
  RegionUnitedStates = 1,
  RegionIndia = 2,
};

typedef SWIFT_ENUM(NSInteger, Product, open) {
  ProductFaceID = 0,
  ProductIAM = 1,
};

typedef SWIFT_ENUM(NSInteger, LivenessMode, open) {
  LivenessModeNone = 0,
  LivenessModeTextureLiveness = 1,
};

typedef SWIFT_ENUM(NSInteger, FaceMatchMode, open) {
  FaceMatchModeFace_Id = 0,
  FaceMatchModeFace_Face = 1,
  FaceMatchModeFace_IdFaceString = 2,
};


SWIFT_CLASS("_TtC12HyperSnapSDK18HyperSnapSDKConfig")
@interface HyperSnapSDKConfig : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull StoryBoardName;)
+ (NSString * _Nonnull)StoryBoardName SWIFT_WARN_UNUSED_RESULT;
+ (void)initializeWithAppId:(NSString * _Nonnull)appId appKey:(NSString * _Nonnull)appKey region:(enum Region)region product:(enum Product)product;
/// Initialization method for the SDK. Should be called before any of the SDK’s ViewControllers.
/// \param appId Provided by HyperVerge
///
/// \param appKey Provided by HyperVerge
///
/// \param region It is of type ‘HyperSnapParams.Region’. This enum has 3 values - AsiaPacific, India and UnitedStates
///
+ (void)initializeWithAppId:(NSString * _Nonnull)appId appKey:(NSString * _Nonnull)appKey region:(enum Region)region;
+ (void)setShouldUseSignature:(BOOL)shouldUseSignature;
+ (void)setShouldEnableSSLPinning:(BOOL)shouldEnableSSLPinning;
+ (void)setShouldUseAnalytics:(BOOL)shouldUse;
+ (void)setBrandingCheck:(BOOL)shouldCheck completionHandler:(void (^ _Nonnull)(HVError * _Nullable, NSDictionary<NSString *, id> * _Nullable))completionHandler;
+ (void)setShouldReturnRawResponse:(BOOL)shouldReturn;
+ (void)deleteImageAtUri:(NSString * _Nonnull)imageUri;
+ (NSString * _Nonnull)sortDictionaryAlphabetically:(NSDictionary<NSString *, id> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



















#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
